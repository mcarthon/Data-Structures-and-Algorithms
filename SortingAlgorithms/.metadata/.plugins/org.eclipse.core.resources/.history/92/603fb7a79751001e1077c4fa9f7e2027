package code;

import java.util.ArrayList;
import java.util.Random;

public class Implementation {
	
	public static void main (String[] args ) {

	    ArrayList<Integer> testArray = new ArrayList<Integer> ();

	    testArray.add(1);
	    testArray.add(4);
	    testArray.add(2);
	    testArray.add(0);

	    testArray = quick_sort(testArray);
	    
	    System.out.println ( testArray );

	    }
	
	 static ArrayList<Integer> quick_sort(ArrayList<Integer> arr) {
	        
	        if ( arr.size() < 2 ) {
	            
	            return arr;
	            
	        }
	        
	        Random random = new Random();
	        
	        int pivotIndex = random.nextInt ( arr.size() );
	        
	        arr = swap ( arr, 0, pivotIndex );
	        
	        pivotIndex = 0;
	        
	        int leftPointer = 1;
	        
	        int rightPointer = arr.size() - 1;
	        
	        while ( leftPointer <= rightPointer ) {
	            
	            if ( arr.get ( leftPointer ) <= arr.get ( 0 ) ) {
	                
	                leftPointer ++;
	                
	            }
	            
	            else if ( arr.get ( rightPointer ) > arr.get ( 0 ) ) {
	                
	                rightPointer --;
	                
	            }
	            
	            else {
	                
	                arr = swap ( arr, leftPointer, rightPointer );
	                
	                leftPointer ++;
	                
	                rightPointer --;
	                
	            }
	            
	        }
	        
	        ArrayList<Integer> leftSide = new ArrayList<Integer> ( arr.subList ( 1, leftPointer ) );
	        
	        quick_sort ( leftSide );
	        
	        ArrayList<Integer> rightSide = new ArrayList<Integer> ( arr.subList ( leftPointer, arr.size() ) );
	        
	        quick_sort ( rightSide );
	        
	        int runner = 1;
	        
	        while ( arr.get ( pivotIndex ) > arr.get ( runner ) ) {
	        	
	        	arr = swap ( arr, pivotIndex, runner );
	        	
	        	runner --;
	        	
	        	pivotIndex ++;
	        	
	        }
	        
	        return arr;
	        
	    }
	    
	    static ArrayList<Integer> swap (ArrayList<Integer> arr, int left, int right) {
	        
	        int temp = arr.get ( left );
	        
	        arr.set ( left, arr.get ( right ) );
	        
	        arr.set ( right, temp );
	        
	        return arr;
	        
	    }

}
